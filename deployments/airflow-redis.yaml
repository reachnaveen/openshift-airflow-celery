apiVersion: v1
items:
- kind: DeploymentConfig
  apiVersion: "v1"
  metadata:
    annotations:
      description: Defines how to deploy the database
      template.alpha.openshift.io/wait-for-ready: 'true'
    name: 'redis'
  spec:
    replicas: 1
    selector:
      name: 'redis'
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: 'redis'
        name: 'redis'
      spec:
        containers:
          - env:
              - name: REDIS_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: database-password
                    name: airflow-redis-secrets-celery
            image: 'kubernetes/redis:v1'
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 6379
              timeoutSeconds: 1
            name: redis
            ports:
              - containerPort: 6379
            readinessProbe:
              exec:
                command:
                  - /bin/sh
                  - '-i'
                  - '-c'
                  - "test \"$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)\" == \"PONG\""
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: '512Mi'
            volumeMounts:
              - mountPath: /var/lib/pgsql/data
                name: 'redis-data'
        volumes:
          - name: 'redis-data'
            persistentVolumeClaim:
              claimName: 'redis-celery'
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - redis
          from:
            kind: ImageStreamTag
            name: 'redis:celery'
        type: ImageChange
      - type: ConfigChange
        
- kind: Service
  apiVersion: "v1"
  metadata:
    annotations:
      description: Exposes the database server
    name: "redis"
  spec:
    ports:
      - name: "redis"
        port: 6379
        targetPort: 6379
    selector:
      name: "redis"
      
kind: List
metadata: []